import java.util.Scanner;

public class MatrixOperations {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of rows and columns of the matrices: ");
        int rows = scanner.nextInt();
        int cols = scanner.nextInt();

        int[][] matrix1 = new int[rows][cols];
        int[][] matrix2 = new int[rows][cols];

        System.out.println("Enter elements of Matrix 1:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                matrix1[i][j] = scanner.nextInt();
            }
        }

        System.out.println("Enter elements of Matrix 2:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                matrix2[i][j] = scanner.nextInt();
            }
        }

        System.out.println("Addition:");
        printMatrix(addMatrices(matrix1, matrix2, rows, cols));

        System.out.println("Subtraction:");
        printMatrix(subtractMatrices(matrix1, matrix2, rows, cols));

        System.out.print("Enter number of columns for Matrix 2 for multiplication: ");
        int cols2 = scanner.nextInt();

        if (cols != cols2) {
            System.out.println("Multiplication not possible with given dimensions.");
        } else {
            int[][] matrix2Mul = new int[cols][cols2];
            System.out.println("Enter elements of Matrix 2 for multiplication:");
            for (int i = 0; i < cols; i++) {
                for (int j = 0; j < cols2; j++) {
                    matrix2Mul[i][j] = scanner.nextInt();
                }
            }
            System.out.println("Multiplication:");
            printMatrix(multiplyMatrices(matrix1, matrix2Mul, rows, cols, cols2));
        }

        scanner.close();
    }

    static int[][] addMatrices(int[][] mat1, int[][] mat2, int rows, int cols) {
        int[][] result = new int[rows][cols];
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                result[i][j] = mat1[i][j] + mat2[i][j];
            }
        }
        return result;
    }

    static int[][] subtractMatrices(int[][] mat1, int[][] mat2, int rows, int cols) {
        int[][] result = new int[rows][cols];
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                result[i][j] = mat1[i][j] - mat2[i][j];
            }
        }
        return result;
    }

    static int[][] multiplyMatrices(int[][] mat1, int[][] mat2, int rows, int common, int cols2) {
        int[][] result = new int[rows][cols2];
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols2; j++) {
                for (int k = 0; k < common; k++) {
                    result[i][j] += mat1[i][k] * mat2[k][j];
                }
            }
        }
        return result;
    }

    static void printMatrix(int[][] matrix) {
        for (int[] row : matrix) {
            for (int val : row) {
                System.out.print(val + " ");
            }
            System.out.println();
        }
    }
}
